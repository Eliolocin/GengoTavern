name: Build and Release

on:
  push:
    branches: [ master, main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history to properly compare tags
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Build application
        run: bun run build
      
      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get the most recent tag
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LATEST_TAG" ]; then
            # No previous tag, use all commits
            CHANGELOG=$(git log --pretty=format:"â€¢ %s" --no-merges)
          else
            # Get commits since the last tag
            CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"â€¢ %s" --no-merges)
          fi
          
          # If no new commits, provide a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="â€¢ Minor updates and improvements"
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          body: |
            ## Changes in this release:
            ${{ steps.changelog.outputs.changelog }}
          files: |
            dist/GengoTavern.html
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # Updated Discord notification with same filtered changelog
      - name: Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            # GengoTavern v${{ steps.package-version.outputs.version }}
            
            ðŸ“‹ **What's new**:
            ${{ steps.changelog.outputs.changelog }}
            
            ðŸ“¥ **Download**: [Github Link](https://github.com/Eliolocin/GengoTavern/releases)